#!/bin/bash

#
# Helper script that setups a test Atoma network environment on Sui.
# The TOMA token package must be deployed at this point.
# See ./publish_toma
#
# Usage: ./oneclicksetup.sh
#
# When this script is done, we will have a model named "llama" with one echelon
# ID 1, and a node registered to that model echelon.
# Also, it will create .env file in the sui directory with configuration that
# this script generated.
#

function abs_path_to_git_root_dir() {
    # Recursively find the repo root directory so that this script can be called
    # from anywhere

    if [ -d "atoma-contracts" ]; then
        echo "$(pwd)/atoma-contracts"
    elif [ "$(pwd)" == "/" ]; then
        echo "No atoma-contracts directory found"
        exit 1
    else
        cd ..
        abs_path_to_git_root_dir
    fi
}

entrance_dir=$(pwd)
root_dir=$(abs_path_to_git_root_dir)

cd $root_dir/sui

active_env=$(sui client active-env)
if [ "${active_env}" != "testnet" ] && [ "${active_env}" != "devnet" ]; then
    echo "This script is only for testnet or devnet. Exiting."
    exit 1
fi

toma_package=$(./dev/print_toma_pkg_id)
if [ $? -ne 0 ]; then
    echo "Failed to get the TOMA package ID. Exiting."
    exit 1
fi

echo "TOMA package ID: ${toma_package}"
./dev/cli toma faucet --toma-package "${toma_package}" --amount 100000000000 || exit 1

json=$(sui client publish --json "${root_dir}/sui/packages/atoma")
if [ $? -ne 0 ]; then
    echo "Failed to publish the package:\n\n"
    echo "${json}"
    echo
    echo "If you need gas, try running: sui client faucet"
    exit 1
fi

package=$(
    echo "${json}" | jq -r '.objectChanges[] | select(.packageId) | .packageId'
)

if [ -z "${package}" ] || [[ ! "${package}" =~ ^0x ]]; then
    echo "Could not publish the package. Exiting."
    exit 1
fi

echo
echo "Using CLI to setup resource on chain"

set -e

cd $root_dir/sui/dev

# These commands follow the README.md

./cli db add-model \
    --package "${package}" \
    --name "llama31_instruct8b" \
    --text2text

./cli db add-model-echelon \
    --package "${package}" \
    --model "llama31_instruct8b" \
    --echelon 1 \
    --input-fee-per-token 1 \
    --relative-performance 100

./cli db set-required-registration-toma-collateral \
    --package "${package}" \
    --new-amount 100

# sometimes the RPC takes a bit of time to index the airdropped TOMA
# tokens, so we give it some extra time
sleep 2
./cli db register-node --package "${package}"

./cli db add-node-to-model \
    --package "${package}" \
    --model "llama31_instruct8b" \
    --echelon 1

echo
echo
echo "Package: ${package}"

echo
echo
echo "Sending test text prompt"

./cli gate submit-tell-me-a-joke-prompt \
    --package "${package}" \
    --model "llama31_instruct8b"

echo
echo
env_file_path="${root_dir}/sui/.env.${active_env}"
echo "Storing IDs into file '${env_file_path}'"
./cli db print-env --package "${package}" >"${env_file_path}"
cat "${env_file_path}"

# leave the caller where they started
cd $entrance_dir
